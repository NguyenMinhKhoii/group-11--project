const jwt = require("jsonwebtoken");
const fs = require("fs");

let resetTokens = {}; // { email: token }

exports.forgotPassword = (req, res) => {
  const { email } = req.body;
  const user = global.users.find(u => u.email === email);
  if (!user) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng!" });

  const token = jwt.sign({ email }, "RESET_SECRET", { expiresIn: "10m" });
  resetTokens[email] = token;

  console.log(`üü¢ Token reset cho ${email}: ${token}`);
  res.json({ message: "ƒê√£ g·ª≠i token reset (xem console ƒë·ªÉ test)", token });
};

exports.resetPassword = (req, res) => {
  const { token, newPassword } = req.body;
  try {
    const decoded = jwt.verify(token, "RESET_SECRET");
    const user = global.users.find(u => u.email === decoded.email);
    if (!user) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng!" });

    user.password = newPassword;
    delete resetTokens[decoded.email];
    res.json({ message: "ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u th√†nh c√¥ng!" });
  } catch (err) {
    res.status(400).json({ message: "Token kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n!" });
  }
};

exports.uploadAvatar = (req, res) => {
  const userId = req.user.id;
  const user = global.users.find(u => u.id === userId);
  if (!user) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng!" });

  // Gi·∫£ l·∫≠p URL Cloudinary
  const avatarUrl = `https://fake-cloudinary.com/${req.file.filename}.jpg`;
  user.avatar = avatarUrl;

  res.json({ message: "C·∫≠p nh·∫≠t avatar th√†nh c√¥ng!", avatar: avatarUrl });
};
